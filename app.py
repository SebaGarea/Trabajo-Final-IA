import streamlit as st
import google.generativeai as genai
import os

# --- Configuraci√≥n Inicial ---
st.set_page_config(page_title="Inventos por Pa√≠s", page_icon="üí°")
st.title("üí° Descubre Inventos por Pa√≠s con Gemini")
st.caption("Una app para explorar inventos notables y su impacto.")

# --- Configuraci√≥n de la API de Gemini ---
try:
    # Intenta obtener la clave API desde los secretos de Streamlit
    api_key = st.secrets["GOOGLE_API_KEY"]
    genai.configure(api_key=api_key)
    model = genai.GenerativeModel('gemini-1.5-flash-latest') # Usamos el modelo flash
except KeyError:
    st.error("‚ö†Ô∏è Clave API de Google no encontrada. Aseg√∫rate de configurarla en st.secrets.")
    st.stop() # Detiene la ejecuci√≥n si no hay clave API
except Exception as e:
    st.error(f"üö® Error al configurar Gemini: {e}")
    st.stop()

# --- Interfaz de Usuario ---
paises = [
    "Selecciona un pa√≠s...", "Argentina", "M√©xico", "Espa√±a", "Colombia", "Per√∫",
    "Chile", "Estados Unidos", "Reino Unido", "Alemania", "Francia",
    "Jap√≥n", "China", "India", "Brasil", "Canad√°", "Italia", "Corea del Sur"
    # Puedes a√±adir m√°s pa√≠ses aqu√≠
]

pais_seleccionado = st.selectbox("Elige un pa√≠s:", paises)

# --- L√≥gica del Bot√≥n y Llamada a la API ---
if st.button("Buscar Inventos"):
    if pais_seleccionado != "Selecciona un pa√≠s...":
        st.write(f"Buscando un invento destacado de {pais_seleccionado}...")

        # Prepara el prompt para Gemini
        prompt = f"""
        Describe un invento destacado originado en {pais_seleccionado}.
        Incluye:
        1. El nombre del invento.
        2. Una breve explicaci√≥n de qu√© es y c√≥mo funciona.
        3. Su impacto principal en la sociedad o en un campo espec√≠fico.
        S√© conciso y claro.
        """

        try:
            # Muestra un spinner mientras se genera la respuesta
            with st.spinner('üß† Pensando... Gemini est√° generando la respuesta...'):
                response = model.generate_content(prompt)

            # Muestra la respuesta
            st.subheader(f"Invento Destacado de {pais_seleccionado}:")
            st.markdown(response.text) # Usamos markdown para mejor formato

        except Exception as e:
            st.error(f"üö® Ocurri√≥ un error al contactar a Gemini: {e}")
            st.warning("Intenta de nuevo m√°s tarde o revisa tu conexi√≥n/clave API.")

    else:
        st.warning("Por favor, selecciona un pa√≠s de la lista.")

# --- Pie de p√°gina (Opcional) ---
st.markdown("---")
st.caption("Desarrollado con Streamlit y Google Gemini.")
